<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberDAO">
	<!-- 아이디 찾기 -->
	<select id="idCheck" resultType="Integer">
		select count(*) from member
		where id=#{id}
	</select>

	<!-- 로그인 비번 확인 -->
	<select id="getPass" resultType="String">
		select pw from member where
		id=#{id}
	</select>

	<!-- 브랜치 이름 가져오기-->
	<select id="getBrName" resultType="String">
		select branchName from member
		where id=#{id}
	</select>
	
	<!-- 포지션 찾기 -->
	<select id="getMemberPosition" resultType="member">
		select id,position from member
		where id=#{id}
	</select>

	<!-- 회원가입 -->
	<insert id="insertMember">
		insert into member
		<if test="kid==''and branchName==null">
			(id,pw,name,phone,birth,email,brStatus)
			values(#{id},#{pw},#{name},#{phone},#{birth},#{email},0)
		</if>
		<if test="kid!=''and branchName==null">
			(id,pw,name,phone,birth,email)
			values(#{kid},#{pw},#{name},#{phone},#{birth},#{email})
		</if>
		<if test="branchName!=null">
			values(#{id},#{pw},#{name},#{phone},#{birth},#{email},#{branchName},#{zipcode},#{branchAddr1},#{branchAddr2},'지점장',-1,#{branchtel},#{branchimg},#{branchoriginimg},sysdate)
		</if>
	</insert>

	<!-- 로그인 상태 가져오기 -->
	<select id="getStatus" resultType="Integer">
		select brStatus from member
		where id=#{id}
	</select>

	<!-- 마이페이지 기제 정보 가져오기 -->
	<select id="getMyPageInfo" resultType="member">
		select
		id,name,phone,birth,email from member where id=#{id}
	</select>

	<!-- 정보수정 --> <!-- 매니저 추가로 들어가도 됨 -->
	<update id="upMyPageInfo" parameterType="member">
		update member set name=#{name},phone=#{phone},email=#{email}
		<if test="pw!=null and pw!=''">
			,pw=#{pw}
		</if>
		where id=#{id}
	</update>

	<!-- 전체 지점수 가져오기 -->
	<select id="allBranchCount" resultType="Integer">
		select count(*) from member where branchName!='본점' and branchName is not
		Null
	</select>
	<!-- 전체 회원 가져오기 -->
	<select resultType="Integer" id="allMemberCount">
		select count(*) from member where branchName is Null
	</select>

	<!-- 고객의소리 지점선택 -->
	<select id="branchList" resultType="String">
		select branchname from member where position='지점장' and branchaddr1 like '%'
		|| #{gugun} || '%'
	</select>

	<!-- 고객의소리 이메일 -->
	<select id="emailList" resultType="String">
		select email from member where position is null and id=#{id};
	</select>

	<!-- 회원목록 -->
	<select id="memberList" resultType="member">
		<include refid="pagingHeader"></include>
		select * from member where position is null order by id
		<include refid="pagingFooter"></include>
	</select>

	<!-- 게시글갯수 -->
	<select id="countMember" resultType="int">
		select count(*) from member
		where position is null
	</select>

	<!-- 지점장 목록 -->
	<select id="infoList" resultType="member">
		<include refid="pagingHeader"></include>
		select * from member where position is not null and branchname != '본점'
		and brStatus != -1
		<include refid="pagingFooter"></include>
	</select>

	<!-- 게시글갯수 -->
	<select id="countinfo" resultType="int">
		select count(*) from member
		where position is not null and branchname != '본점' and brStatus != -1
	</select>

	<!-- 지점장승인 목록 -->
	<select id="approveList" resultType="member">
		<include refid="pagingHeader"></include>
		select
		id,pw,name,phone,birth,email,branchName,zipcode,branchaddr1,branchaddr2,brStatus,position
		from member where brStatus = -1
		<include refid="pagingFooter"></include>
	</select>

	<!-- 회원 제명 처리 -->
	<update id="expulmember">
		<![CDATA[update member set brstatus=-2 where id=#{id}]]>
	</update>
	
	<!-- 제명 위스 환불 -->
	<update id="refundofexpul">
		<![CDATA[update roompayment set status=-2 where id=#{id} and reservdate>=sysdate]]>	
	</update>

	<!-- 회원 제명 취소 -->
	<update id="cancleExpulmember">
		update member set brstatus=0 where id=#{id}
	</update>

	<!-- 게시글갯수 -->
	<select id="countApprove" resultType="int">
		select count(*) from member
		where brStatus = -1
	</select>

	<!-- 어드민 추가 -->
	<insert id="insertAdmin">
		<![CDATA[insert into member(id,pw,name,phone,email,position,regdate) values(#{id},#{pw},#{name},#{phone},#{email},'관리자',sysdate)]]>
	</insert>
	
	<!-- 어드민 수정 -->
	<update id="updateAdmin" parameterType="member">
		update member set id=#{id},name=#{name},phone=#{phone},email=#{email}
		<if test="pw!=null and pw!=''">
			,pw=#{pw}
		</if>
		where id=#{id}
	</update>
	
	<!-- 어드민 삭제 -->
	<delete id="deleteAdmin">
		delete member where id=#{id}
	</delete>
	
	<!-- 전체회원 검색용 -->
	<select id="getAllMember" resultType="member">
	<include refid="pagingHeader"></include>
		<![CDATA[select rownum num, member.* from member]]>
		<if test="searchOption!=''">
		 	<include refid="search"></include>
		 </if>
		 	<include refid="pagingFooter"></include>
	</select>
		
	<!-- 전체회원 검색카운트 -->
	<select id="getAllMemberCount" resultType="Integer">
		<![CDATA[select count(*) from member]]>
		 <include refid="search"></include>
	</select>
	
	<!-- 어드민 목록 -->
	<select id="getAdminList" resultType="member">
		<![CDATA[select * from member where position='관리자' or position='총관리자' order by id]]>   
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findId" resultType="String">
		<![CDATA[select id from member where name=#{name} and email=#{email}]]> 
	</select>
	
	<!-- 비번 여부 확인 -->
	<select id="findpw" resultType="String">
		<![CDATA[select pw from member where id=#{id} and email=#{email} and name=#{name}]]>
	</select>

	<!-- 비번 바꿔버리기 -->
	<select id="changePW">
		<![CDATA[update member set pw=#{pw} where id=#{id} and email=#{email} and name=#{name}]]> 
	</select>
	
	<sql id="search">
      <choose>
         <!-- 검색옵션이 전체검색 일경우 -->
         <when test="searchOption=='all'">
         <![CDATA[
         where NAME LIKE '%'||#{keyword}||'%' 
         OR ID LIKE '%'||#{keyword}||'%'
         OR PHONE LIKE '%'||#{keyword}||'%'
            OR EMAIL LIKE '%'||#{keyword}||'%'
         ]]>
         </when>

         <!-- 검색옵션이 전체가 아닐경우 -->
         <otherwise>
         <![CDATA[
         where ${searchOption} LIKE '%'||#{keyword}||'%' 
         ]]>
         </otherwise>
      </choose>
   </sql>
	

	<!-- 페이징 sql -->
	<sql id="pagingHeader">
		select * from ( select rownum as rn, A.* from(
	</sql>
	<sql id="pagingFooter">
		)A
		)where rn between #{start} and #{end}
	</sql>
	
	
</mapper>