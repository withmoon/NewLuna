<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mgRoomDAO">

	<!--  <resultMap id="roommap" type="Room" >
 			<result property="roomnum" column="ROOMNUM" />
 			<result property="branchName" column="branchName" />
 			<result property="roomName" column="roomName" />
 			<result property="roomEx1" column="roomEx1" />
 			<result property="roomEx2" column="roomEx2" />
 			<result property="roomEx3" column="roomEx3" />
 			<result property="roomEx4" column="roomEx4" />
 			<result property="inown" column="inown" /> 
 			<result property="joosu" column="joosu" />
 			<result property="day1" column="day1" />
 			<result property="roomExplain" column="roomExplain" />
 			<result property="roomWarn" column="roomWarn" />
 			<result property="comeRoute" column="comeRoute" />
 			<result property="roomLocate" column="roomLocate" />
 			<result property="id" column="id" />
 	</resultMap>   -->
	<select id="countArticle" resultType="int"> 
		select count(*) from room where branchName = #{branchName}
	</select>
	<select id="roomcount" resultType="int">
		SELECT min(roomnum+1) FROM room WHERE roomnum+1 NOT IN (SELECT roomnum FROM room)
	</select>
	<select id="roomLocate" resultType="String">
		select branchaddr1 as roomLocate from member where branchName = #{branchName}
	</select> 


	<!-- 룸 테이블 -->
	<select id="RoomList" resultType="Room">
	<include refid="pagingHeader"></include>
		SELECT * FROM ROOM
		<include refid="search"></include>
		ORDER BY ROOMNUM 
		<include refid="pagingFooter"></include>
	</select>
	<!-- 검색조건 sql -->
	  <sql id="search">
	 	<choose>
	 		<!-- 검색옵션이 전체 검색일 경우 -->
	 		<when test="searchOption='all'">
	 			where branchName=#{branchName} and(ROOMNAME like '%'||#{keyword}||'%' or ROOMNUM like '%'||#{keyword}||'%')
	 		</when>
	 		<otherwise>
	 			where ${searchOption} like '%'||#{keyword}||'%'
	 		</otherwise>
	 	</choose>
	 </sql>
	  <sql id="pagingHeader">
	 	select * from ( select rownum as rn,A.* from(
	 </sql>
	 <sql id="pagingFooter">
	 		)A
	 	)where rn  between #{start} and #{end}
	 </sql>

	<!-- 방생성 파일 -->
	<insert id="RoomText" parameterType="Room">
		 <![CDATA[
		  INSERT INTO ROOM (ROOMNUM,BRANCHNAME ,ROOMNAME, ROOMEX1,ROOMEX2,ROOMEX3,ROOMEX4, ROOMEXPLAIN,ROOMWARN ,ROOMLOCATE,ROOMPRICE) 
		  						VALUES (#{roomnum},#{branchName} , #{roomName},#{roomEx1}, #{roomEx2},#{roomEx3},#{roomEx4},#{roomExplain},#{roomWarn},#{roomLocate},#{roomPrice})
  		 ]]>
	</insert>
	<insert id="RoomFile" parameterType="hashmap">
		 <![CDATA[ 
		  INSERT INTO ROOMFILE (ROOMNUM,FILENUM,ONAME,FNAME) 
		  							VALUES ( #{roomnum},#{filenum}, #{originalfileName},#{saveFileName})
  		 ]]>
	</insert>

	<!-- 방상세보기 text -->
	<select id="RoomSelect" resultType="Room">
	<![CDATA[
	 	SELECT * FROM ROOM WHERE ROOMNUM = #{roomnum}
	 	]]>
	</select>
	<!-- 방상세보기 file  -->
	<select id="RoomFileSelect" resultType="File">
	<![CDATA[
		SELECT ROOMNUM,FILENUM,ONAME,FNAME FROM ROOMFILE WHERE  ROOMNUM = #{roomnum} ORDER BY FILENUM
		]]>
	</select>
	
	<!-- 방업데이트text -->
	<update id="RoomTextInsert"  parameterType="Room" >
	 <![CDATA[
	 UPDATE ROOM SET ROOMNAME=#{roomName},BRANCHNAME=#{branchName},ROOMEX1=#{roomEx1},
	 ROOMEX2=#{roomEx2},ROOMEX3=#{roomEx3},ROOMEX4=#{roomEx4},ROOMEXPLAIN=#{roomExplain},
	 ROOMWARN=#{roomWarn},ROOMPRICE=#{roomPrice},ROOMLOCATE=#{roomLocate} WHERE ROOMNUM=#{roomnum}
	  ]]>
	</update>
	<!-- 방업데이트file -->
	<update id="RoomFileInsert" parameterType="hashmap">
	 <![CDATA[
	 update ROOMFILE SET ONAME= #{originalfileName},FNAME=#{saveFileName}
	 WHERE ROOMNUM= #{roomnum} and  FILENUM = #{filenum}
	 ]]>
	</update>
	
	<!-- 방삭제하기 -->
	<delete id="RoomDelete">
	 <![CDATA[
		DELETE ROOM WHERE ROOMNUM=#{roomnum}    
		]]>
	</delete>
	<delete id="RoomFileDelete">
	 <![CDATA[
	DELETE ROOMFILE WHERE ROOMNUM=#{roomnum}    
	]]>
	</delete>
	
	

</mapper> 

